package des

import (
  "testing"
  "fmt"
)

/*
 * Single-length key, single-length plaintext -
 * Key    : 0123 4567 89ab cdef
 * Plain  : 0123 4567 89ab cde7
 * Cipher : c957 4425 6a5e d31d
*/

var (
  key   = []byte {0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef}
  plain = []byte {0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xe7}
  ciphr = []byte {0xc9, 0x57, 0x44, 0x25, 0x6a, 0x5e, 0xd3, 0x1d}

  key2  = []byte {0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10}
  ciphr2= []byte {0x7f, 0x1d, 0x0a, 0x77, 0x82, 0x6b, 0x8a, 0xff}

  key3  = []byte {0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10, 0x89, 0xab, 0xcd, 0xef, 0x01, 0x23, 0x45, 0x67}
  ciphr3= []byte {0xde, 0x0b, 0x7c, 0x06, 0xae, 0x5e, 0x0e, 0xd5}
)

func TestEnc(t *testing.T){
  c := NewDESCipher(key)
  result := make([]byte,8)
  c.Encrypt(plain, result)
  for _,b := range result {
    fmt.Printf("%02X ", b)
  }
  
  println()

  c2 := NewDES2Cipher(key2)
  c2.Encrypt(plain, result)
   for _,b := range result {
    fmt.Printf("%02X ", b)
  }

  println()

  c3 := NewDES2Cipher(key3)
  c3.Encrypt(plain, result)
   for _,b := range result {
    fmt.Printf("%02X ", b)
  }
}
func TestDec(t *testing.T){}





